/******************************************************************************
 * Copyright (C) 2017 by Alex Fosdick - University of Colorado
 *
 * Redistribution, modification or use of this software in source or binary
 * forms is permitted as long as the files maintain this copyright. Users are 
 * permitted to modify this and use it to learn about the field of embedded
 * software. Alex Fosdick and the University of Colorado are not liable for any
 * misuse of this material. 
 *
 *****************************************************************************/
/**
 * @file stats.c
 * @brief main program for computing various statistical values of a data array
 *
 * The program defines an array of data. functions may be called to print the values,
 * and compute various values of statistically important phenomena (e.g. mean, min
 * max).
 *
 * @author Dave White
 * @date 04-21-2017
 *
 */



#include <stdio.h>
#include "stats.h"

/* Size of the Data Set */
#define SIZE (40)

void main() {

  unsigned char numbers[SIZE] = { 34, 201, 190, 154,   8, 194,   2,   6,
                              114, 88,   45,  76, 123,  87,  25,  23,
                              200, 122, 150, 90,   92,  87, 177, 244,
                              201,   6,  12,  60,   8,   2,   5,  67,
                                7,  87, 250, 230,  99,   3, 100,  90};

  /* Other Variable Declarations Go Here */



  unsigned char * ptr;
  ptr = numbers;
  unsigned char max_out;
  unsigned char min_out;
  unsigned char med_out;
  float mean_out; 

  /* Statistics and Printing Functions Go Here */

  void print_statistics(unsigned char * array, unsigned int length){
  // insert code here
  }

  void print_array(unsigned char * array, unsigned int length){

    // ip = array;
    //     printf("%d\n", *array);
    for(int i = 0; i < length; i++){
      printf("%d\n", *array);
      array++;
    }
  }

  unsigned char find_median(unsigned char * array, unsigned int length){
  // insert code here
  }

  float find_mean(unsigned char * array, unsigned int length){

    float mean;
    float sum = 0;

    for(unsigned int i = 0; i < length; i++){
      sum += *array;
      array++;
    }
    mean = sum / length ;
    return mean;
  }

  unsigned char find_maximum(unsigned char * array, unsigned int length){ 

    unsigned char max;

    for(int i = 0; i < length; i++){
      if ( i == 0 ){
        max = *array;
      }
      if  ( *array > max ){
        max = *array;
      }
      array++;
    }
    return max;
  }

  unsigned char find_minimum(unsigned char * array, unsigned int length){
    
    //unsigned int i;
    unsigned char min;

    for (int i = 0; i < length; i++){
      if ( i == 0 )
        min = *array;
      if ( *array < min )
        min = *array;
      array++;
    }
    return min;
  }

  unsigned char sort_array(unsigned char * array, unsigned int length){

    unsigned char s_array[length];

    for (int i = 0; i < length; i++){

      

    }

  }

  //print_array(ptr, SIZE);

  max_out = find_maximum(ptr, SIZE);
  printf("The maximum of the set is: %d", max_out);
  printf("\n");

  min_out = find_minimum(ptr, SIZE);
  printf("The minimum of the set is: %d", min_out);
  printf("\n");

  mean_out = find_mean(ptr, SIZE);
  printf("The mean of the set is: %f", mean_out);
  printf("\n");

}

/* Add other Implementation File Code Here */
